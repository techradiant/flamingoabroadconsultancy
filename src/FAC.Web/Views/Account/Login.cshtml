@using FAC.Web.Models
@model LoginViewModel
@{
    ViewBag.Title = "Log in";
}
<!-- Start main-content -->
<section class="page-title" style="background-image: url(../../media/images/background/page-title.jpg);">
    <div class="auto-container">
        <div class="title-outer">
            <h1 class="title">Log In</h1>
            <ul class="page-breadcrumb">
                <li>@Html.ActionLink("Home", "Index", "Home", new { area = "" }, new { @class = "" })</li>
                <li>@Html.ActionLink("Employees ", "Index", "Employees", new { area = "" }, new { @class = "" })</li>
                <li>Edit</li>
            </ul>
        </div>
    </div>
</section>
<!-- end main-content -->
<!-- Section -->
<section>
    <div class="container">
        <main aria-labelledby="title">
            <h2 id="title">@ViewBag.Title.</h2>
            <div class="row">
                <div class="col-md-8">
                    <section id="loginForm">
                        @using (Html.BeginForm("Login", "Account", new { ReturnUrl = ViewBag.ReturnUrl }, FormMethod.Post, new { role = "form" }))
                        {
                            @Html.AntiForgeryToken()
                            <h4>Use a local account to log in.</h4>
                            <hr />
                            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
                            <div class="row">
                                @Html.LabelFor(m => m.Username, new { @class = "col-md-2 col-form-label" })
                                <div class="col-md-10">
                                    @Html.TextBoxFor(m => m.Username, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Username, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                @Html.LabelFor(m => m.Password, new { @class = "col-md-2 col-form-label" })
                                <div class="col-md-10">
                                    @Html.PasswordFor(m => m.Password, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(m => m.Password, "", new { @class = "text-danger" })
                                </div>
                            </div>
                            <div class="row">
                                <div class="offset-md-2 col-md-10">
                                    <div class="checkbox">
                                        @Html.CheckBoxFor(m => m.RememberMe)
                                        @Html.LabelFor(m => m.RememberMe)
                                    </div>
                                </div>
                            </div>
                            <br />
                            <div class="row">
                                <div class="offset-md-2 col-md-10">
                                    <button type="submit" value="Log in" class="theme-btn btn-style-one bg-theme-color5">Log in
                                    </button>
                                </div>
                            </div>
                            <br />
                            <p>
                                @Html.ActionLink("Register as a new user", "Register", new { area = "" }, new { @class = "theme-btn btn-style-one" })
                            </p>
                            @* Enable this once you have account confirmation enabled for password reset functionality
                            <p>
                                @Html.ActionLink("Forgot your password?", "ForgotPassword")
                            </p>*@
                        }
                    </section>
                </div>
                <div class="col-md-4">
                    <section id="socialLoginForm">
                        @Html.Partial("_ExternalLoginsListPartial", new ExternalLoginListViewModel { ReturnUrl = ViewBag.ReturnUrl })
                    </section>
                </div>
            </div>
        </main>

        @section Scripts {
            @Scripts.Render("~/bundles/jqueryval")
        }
    </div>
</section>